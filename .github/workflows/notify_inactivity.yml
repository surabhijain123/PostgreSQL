name: Notify inactive PRs
on:
  schedule:
    - cron: "10 5 * * *"  # Runs daily at 05:10 UTC
  workflow_dispatch:

jobs:
  notify-inactive-prs:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Send reminders for inactive PRs
        uses: actions/github-script@v7  # Use updated version
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const currentTime = new Date();
            const fiveMinutesInMillis = 30 * 1000;

            // Fetch open pull requests using the GitHub API
            const response = await fetch(`https://api.github.com/repos/${context.repo.owner}/${context.repo.repo}/pulls`, {
              headers: {
                Authorization: `token ${github.token}`,
                Accept: 'application/vnd.github.v3+json',
              },
            });

            const prs = await response.json();

            // Log the response to check its structure
            console.log('Response from GitHub API:', prs);

            // Ensure prs is an array before processing
            if (!Array.isArray(prs)) {
              console.error('Expected an array but got:', prs);
              return;
            }

            for (const pr of prs) {
              const lastUpdatedTime = new Date(pr.updated_at);
              const timeSinceLastUpdate = currentTime - lastUpdatedTime;

              // If no activity for more than 5 minutes
              if (timeSinceLastUpdate > fiveMinutesInMillis) {
                const assignees = pr.assignees.map(assignee => `@${assignee.login}`).join(', ');

                // Post a comment to the PR to notify assignees of inactivity
                if (assignees.length > 0) {
                  await fetch(`https://api.github.com/repos/${context.repo.owner}/${context.repo.repo}/issues/${pr.number}/comments`, {
                    method: 'POST',
                    headers: {
                      Authorization: `token ${github.token}`,
                      Accept: 'application/vnd.github.v3+json',
                    },
                    body: JSON.stringify({
                      body: `Hello ${assignees}, this PR has been inactive for more than 5 minutes. Please take a look when you get a chance!`
                    }),
                  });
                } else {
                  // If no assignees, notify in general
                  await fetch(`https://api.github.com/repos/${context.repo.owner}/${context.repo.repo}/issues/${pr.number}/comments`, {
                    method: 'POST',
                    headers: {
                      Authorization: `token ${github.token}`,
                      Accept: 'application/vnd.github.v3+json',
                    },
                    body: JSON.stringify({
                      body: `This PR has been inactive for more than 5 minutes. Please take a look when you get a chance!`
                    }),
                  });
                }
              }
            }
